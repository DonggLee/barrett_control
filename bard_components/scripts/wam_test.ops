
import("bard_components")

import("kdl_typekit")

import("rtt_sensor_msgs")
import("rtt_trajectory_msgs")

//// Set up left WAM + Controller
// Create WAM
var string wam_name = "wam_left"
loadComponent(wam_name,"bard_components::WAM")
setActivity(wam_name,0.0,HighestPriority,ORO_SCHED_RT)

// Load properties from rosparam
loadService(wam_name,"rosparam")
wam_left.rosparam.refreshProperties()
wam_left.rosparam.storeProperties()

// Create controller
loadComponent(wam_name+"_con_trivial","bard_components::controllers::Trivial")
setActivity(wam_name+"_con_trivial",0.001,HighestPriority,ORO_SCHED_RT)

//Connect controller to wam
connect(wam_name+".torques_in",wam_name+"_con_trivial.torques_out",ConnPolicy())

// Connect WAM state to ROS topic
stream(wam_name+".joint_state_out", ros.topic(wam_name+"/joint_states")) 

wam_left_con_trivial.configure()
wam_left_con_trivial.start()

wam_left.configure()
wam_left.start()
